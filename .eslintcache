[{"C:\\Users\\wesbe\\Desktop\\citi-hack\\src\\index.js":"1","C:\\Users\\wesbe\\Desktop\\citi-hack\\src\\reportWebVitals.js":"2","C:\\Users\\wesbe\\Desktop\\citi-hack\\src\\App.js":"3","C:\\Users\\wesbe\\Desktop\\citi-hack\\src\\Upload.js":"4","C:\\Users\\wesbe\\Desktop\\citi-hack\\src\\Components\\navbar-component.jsx":"5","C:\\Users\\wesbe\\Desktop\\citi-hack\\src\\Components\\footer.jsx":"6"},{"size":540,"mtime":1612136488361,"results":"7","hashOfConfig":"8"},{"size":375,"mtime":1611969254269,"results":"9","hashOfConfig":"8"},{"size":0,"mtime":1612167033161,"results":"10","hashOfConfig":"8"},{"size":7463,"mtime":1612166346160,"results":"11","hashOfConfig":"8"},{"size":1270,"mtime":1612166346055,"results":"12","hashOfConfig":"8"},{"size":311,"mtime":1612166346053,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},"1aicr2i",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"17"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\wesbe\\Desktop\\citi-hack\\src\\index.js",["29"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport Upload from './Upload';\r\n\r\nReactDOM.render( <Upload />,document.getElementById('root'));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["30","31"],"C:\\Users\\wesbe\\Desktop\\citi-hack\\src\\reportWebVitals.js",[],"C:\\Users\\wesbe\\Desktop\\citi-hack\\src\\App.js",[],"C:\\Users\\wesbe\\Desktop\\citi-hack\\src\\Upload.js",["32"],"import React, { Component } from 'react';\r\nimport FileBase64 from 'react-file-base64';\r\nimport {Button,Form,FormGroup,Label,FormText,Input} from \"reactstrap\";\r\nimport NavbarComp from \"./Components/navbar-component.jsx\";\r\nimport FooterComp from \"./Components/footer.jsx\";\r\n\r\n\r\n// import \"./upload.css\";\r\nvar AWS = require('aws-sdk');\r\nAWS.config.region = 'us-east-1';\r\nAWS.config.credentials = new AWS.CognitoIdentityCredentials({\r\n    IdentityPoolId: 'us-east-1:fbe229a3-b3c0-4eff-84a8-3184a9561470',\r\n});\r\n\r\nvar lambda = new AWS.Lambda();\r\nclass Upload extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n    \r\n    this.state = {\r\n            confirmation : \"\",\r\n            isLoading : \"\",\r\n            files : \"\",\r\n            Invoice : \"\",\r\n            Amount : \"\",\r\n            InvoiceDate: \"\",\r\n            Vendor : \"\",\r\n            Description : \"\"\r\n      }\r\n\r\n    this.handleChange= this.handleChange.bind(this);\r\n    \r\n    }\r\n\r\n\r\n    handleChange(event){\r\n        event.preventDefault();\r\n        const target = event.target;\r\n        const value=target.value;\r\n        const name=target.name;\r\n\r\n        this.setState({name:value});\r\n\r\n    }\r\n\r\n    async handleSubmit(event){\r\n        event.preventDefault();\r\n        this.setState({confirmation : \"Uploading...\"});\r\n\r\n    }\r\n\r\n    async getFiles(files){\r\n        this.setState({\r\n            isLoading : \"Extracting data\",\r\n             files : files\r\n    });\r\n\r\n\r\n    var filename = files[0].name;\r\n\r\n    var data={\r\n        imageID: filename,\r\n        folder:filename,\r\n        img : this.state.files[0].base64\r\n    };\r\n\r\n    this.setState({confirmation : \"Processing...\"})\r\n    await fetch(\r\n        'https://ihtv21121m.execute-api.us-east-2.amazonaws.com/Development',\r\n        {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept : \"application/json\",\r\n            \"Content-Type\": \"application.json\"\r\n        },\r\n        body : JSON.stringify(data)\r\n        }\r\n    );\r\n\r\n    \r\n    var params = {\r\n        FunctionName: \"arn:aws:lambda:us-east-1:855959782814:function:DetectTextPy\", \r\n        InvocationType: \"RequestResponse\", \r\n        Payload: JSON.stringify(filename), \r\n       };\r\n       \r\n    const response = await lambda.invoke(params, function(err, data) {\r\n    if (err) console.log(err, err.stack); // an error occurred\r\n    else     console.log(data);           // successful response\r\n    });\r\n    \r\n    const OCRBody = response.response['data']\r\n\r\n    console.log(\"OCRBody\",OCRBody);\r\n\r\n    // this.setState({Date :OCRBody.body[0] })\r\n    // this.setState({Amount :OCRBody.body[1] })\r\n    \r\n    // this.setState({InvoiceDate :OCRBody.body[2] })\r\n\r\n    // console.log(response['Payload'])\r\n    \r\n\r\n    // const response = await fetch(\r\n    //     'https://ihtv21121m.execute-api.us-east-2.amazonaws.com/Development/detecttextpy',\r\n    //     {\r\n    //     method: \"POST\",\r\n    //     headers: {\r\n    //         Accept : \"application/json\",\r\n    //         \"Content-Type\": \"application.json\"\r\n    //     },\r\n    //     body : JSON.stringify(targetImage)\r\n       \r\n    //     }\r\n       \r\n    // );\r\n    // this.setState({confirmation : \"\"});\r\n\r\n    // const OCRBody = await response.json();\r\n    // console.log(\"OCRBody\",OCRBody);\r\n\r\n    // this.setState({Date :OCRBody.body[0] })\r\n    // this.setState({Amount :OCRBody.body[1] })\r\n    \r\n    // this.setState({InvoiceDate :OCRBody.body[2] })\r\n\r\n\r\n    }\r\n\r\n    render() { \r\n        const processing=this.state.confirmation;\r\n        return ( \r\n            <div className=\"row\">\r\n            <NavbarComp/>\r\n               <div className=\"col-6 offset-3\">\r\n                    <Form onSubmit={this.handleSubmit} >\r\n                        <FormGroup>\r\n                           <h3 className=\"text-danger\">{processing}</h3>    \r\n                           <h6>Upload Invoice</h6>\r\n                           <FormText color=\"muted\">PNG,JPG</FormText>\r\n                       \r\n                       \r\n                        <div className=\"form-group files color\">\r\n                            <FileBase64 \r\n                            multiple={true} \r\n                            onDone={this.getFiles.bind(this)}></FileBase64>\r\n\r\n                        </div>\r\n                        </FormGroup>  \r\n\r\n                        <FormGroup>\r\n                            <Label>\r\n                                <h6>Date</h6>\r\n                            </Label>\r\n                            <Input \r\n                                type=\"text\"\r\n                                name=\"Date\"\r\n                                id=\"Date\"\r\n                                required\r\n                                value={this.state.Date}\r\n                                onChange={this.handleChange}\r\n                            />\r\n\r\n                        </FormGroup>\r\n\r\n\r\n                        <FormGroup>\r\n                            <Label>\r\n                                <h6>Amount ($)</h6>\r\n                            </Label>\r\n                            <Input \r\n                                type=\"text\"\r\n                                name=\"Amount\"\r\n                                id=\"Amount\"\r\n                                required\r\n                                value={this.state.Amount}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </FormGroup>\r\n\r\n\r\n\r\n                        <FormGroup>\r\n                            <Label>\r\n                                <h6>Date</h6>\r\n                            </Label>\r\n                            <Input \r\n                                type=\"text\"\r\n                                name=\"InvoiceDate\"\r\n                                id=\"InvoiceDate\"\r\n                                required\r\n                                value={this.state.InvoiceDate}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </FormGroup>\r\n\r\n\r\n                        <FormGroup>\r\n                            <Label>\r\n                                <h6>Vendor</h6>\r\n                            </Label>\r\n                            <Input \r\n                                type=\"text\"\r\n                                name=\"Vendor\"\r\n                                id=\"Vendor\"\r\n                                required\r\n                                value={this.state.Vendor}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <Label>\r\n                                <h6>Description</h6>\r\n                            </Label>\r\n                            <Input \r\n                                type=\"text\"\r\n                                name=\"Description\"\r\n                                id=\"Description\"\r\n                                required\r\n                                value={this.state.Description}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </FormGroup>\r\n                        <Button className=\"btn btn-lg btn-block  btn-success\">\r\n                            Submit\r\n                        </Button>\r\n                    </Form>   \r\n                </div>\r\n                <FooterComp/>  \r\n           </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Upload;\r\n","C:\\Users\\wesbe\\Desktop\\citi-hack\\src\\Components\\navbar-component.jsx",["33"],"C:\\Users\\wesbe\\Desktop\\citi-hack\\src\\Components\\footer.jsx",[],{"ruleId":"34","severity":1,"message":"35","line":4,"column":8,"nodeType":"36","messageId":"37","endLine":4,"endColumn":11},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"34","severity":1,"message":"42","line":39,"column":15,"nodeType":"36","messageId":"37","endLine":39,"endColumn":19},{"ruleId":"34","severity":1,"message":"43","line":2,"column":8,"nodeType":"36","messageId":"37","endLine":2,"endColumn":11},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["44"],"no-negated-in-lhs",["45"],"'name' is assigned a value but never used.","'Nav' is defined but never used.","no-global-assign","no-unsafe-negation"]